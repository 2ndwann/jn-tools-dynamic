<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta charset="UTF-8">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="style.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
</head>

<body>
<div class="container-fluid">
	<div class="container">
	<!--<h1 class="text-center">Jehvnar Tools</p>-->
		<ul class="nav justify-content-center">
			<li class="nav-item">
				<a class="nav-link" href="/index.html">Calendar</a> <!-- for now the calendar will be on index.html -->
			</li>
			<li class="nav-item">
				<a class="nav-link disabled" href="/translator.html">Language Translator (soon)</a>
			</li>
		</ul>
	</div>

	<div class="container">
		<div class="bg-light p-5 mb-3">
			<h2>Calendar</h2>
			
			<!-- Select calendar system -->
			<div class="form-group mb-3">
				<label for="calendarSystem">Select calendar system:</label>
				<select class="form-control" id="calendarSystem">
					<option value="4-month">4-month system</option>
					<option value="3-month">3-month system</option>
					<option value="monthless">Monthless system</option>
				</select>
			</div>
			
			<h3>The current date is:</h3>
			<p class="display-1">Year <span id="year">0</span> <span id="optionalContent"><span style="font-size:30px">month <span id="month">0</span>, day <span id="day">0</span></span></span></p>
			<p><span id="daysElapsed" class="bold">0</span> days have elapsed since the beginning of this year.<br/>
			<span id="season" class="bold"></span> is the current season.</p>
			
			<!-- debug info -->
			<button type="button" class="btn btn-primary" data-bs-toggle="collapse" data-bs-target="#debug-info">View debug info</button>
			<div id="debug-info" class="collapse">
				<h3>Debug info:</h3>
			
				<p>Unix time (ms): <span id="unixTimeMillis"></span><br/>
					Jehvnar time now (ms): <span id="jehvnarTimeNow"></span><br/>
					Time offset (ms): <span id="timeOffset"></span>
				</p>
			</div>
		</div>
		
		<div class="alert alert-info">
			<h3>Info:</h3>
			<p>There are 72 days in a Jehvnar year. In this calendar system, the year is divided into <span id="numberOfMonths">4</span> "months", with each month totalling <span id="numberOfDays">18</span> days.</p>
		</div>
	</div>
	
</div>

<script>
const jehvnarEpoch = 1590883200000; // The Jehvnar epoch
const daysInAYear = 72; // How many days are in a year (unused var)
let monthsInAYear = 4; // How many months there are in a year

let unixTimeNow; // The unix millis time now since Unix epoch
let jehvnarTimeNow; // The Jehvnar time now in milliseconds

let timeOffset = 0; // Ingame time offset in milliseconds (probably gonna be used later)

let getTodayUTC = () => {
	let todayDate = new Date().getUTCDate(); // Get today's date
	let todayMonth = new Date().getUTCMonth() + 1; // Get today's month
	let todayYear = new Date().getUTCFullYear(); // Get today's year
	let today = new Date(String(todayYear) + '-' + String(todayMonth).padStart(2, '0') + '-' + String(todayDate).padStart(2, '0') + 'T00:00:00-00:00'); // Get today when it started at GMT 00:00
	
	return today;
}

// Format Jehvnar Reckoning year
let getYear = (jehvnarTime) => {
	return Math.round(jehvnarTime / 86400000);
}

let getDaysElapsed = (jehvnarTime) => {	
	let today = getTodayUTC();
	
	let timeElapsedForToday = unixTimeNow - today.getTime();
	
	timeElapsedForToday = timeElapsedForToday / 1200000 // to minecraft days
	
	return Math.round(timeElapsedForToday);

}

// Format month based on 4-month system
let getMonth = (jehvnarTime) => {
	let today = getTodayUTC();
	
	let timeElapsedForToday = unixTimeNow - today.getTime();
	
	timeElapsedForToday = timeElapsedForToday / 60000 // to minutes
	timeElapsedForToday = timeElapsedForToday / 20 // to minecraft days
	
	let daysElapsedThisYear = timeElapsedForToday;
	let month;
	
	// basically 
	if (monthsInAYear == 4) { // For 4-month calendar
		if (daysElapsedThisYear > 0 && daysElapsedThisYear <= 18) { month = 1; }
		if (daysElapsedThisYear > 18 && daysElapsedThisYear <= 36) { month = 2; }
		if (daysElapsedThisYear > 36 && daysElapsedThisYear <= 54) { month = 3; }
		if (daysElapsedThisYear > 54 && daysElapsedThisYear <= 72) { month = 4; }
	} else if (monthsInAYear == 3) {
		if (daysElapsedThisYear > 0 && daysElapsedThisYear <= 24) { month = 1; }
		if (daysElapsedThisYear > 24 && daysElapsedThisYear <= 48) { month = 2; }
		if (daysElapsedThisYear > 48 && daysElapsedThisYear <= 72) { month = 3; }
	}
	
	return month;
}

let getDay = (jehvnarTime) => {
	let today = getTodayUTC();
	
	let timeElapsedForToday = unixTimeNow - today.getTime();
	
	timeElapsedForToday = timeElapsedForToday / 60000 // to minutes
	timeElapsedForToday = timeElapsedForToday / 20 // to minecraft days
	
	let daysElapsedThisYear = timeElapsedForToday;
	
	let month = getMonth(jehvnarTimeNow);
	
	// get how many days elapsed since this month
	let day;
	day = (daysInAYear / monthsInAYear) - ((month * (daysInAYear / monthsInAYear)) - daysElapsedThisYear);
	
	return Math.round(day);
}

let getSeason = () => {
	let today = getTodayUTC();
	
	let timeElapsedForToday = unixTimeNow - today.getTime();
	
	timeElapsedForToday = timeElapsedForToday / 60000 // to minutes
	timeElapsedForToday = timeElapsedForToday / 20 // to minecraft days
	
	let daysElapsedThisYear = timeElapsedForToday;
	let month;
	
	// (Fixed to 4-month year due to season derivation purposes)
	if (daysElapsedThisYear > 0 && daysElapsedThisYear <= 18) { month = 1; }
	if (daysElapsedThisYear > 18 && daysElapsedThisYear <= 36) { month = 2; }
	if (daysElapsedThisYear > 36 && daysElapsedThisYear <= 54) { month = 3; }
	if (daysElapsedThisYear > 54 && daysElapsedThisYear <= 72) { month = 4; }
	
	if (month == 1) { return "Winter"; }
	if (month == 2) { return "Spring"; }
	if (month == 3) { return "Summer"; }
	if (month == 4) { return "Fall"; }
}


// Update the time
let updateTime = () => {
	unixTimeNow = Date.now(); // Update unix time
	jehvnarTimeNow = unixTimeNow - jehvnarEpoch + timeOffset; // Derive Jehvnar millisecond time
	
	// Update timestamps
	$('#year').html(getYear(jehvnarTimeNow));
	$('#daysElapsed').html(getDaysElapsed(jehvnarTimeNow));
	$('#month').html(getMonth(jehvnarTimeNow));
	$('#day').html(getDay(jehvnarTimeNow));
	$('#season').html(getSeason(jehvnarTimeNow));
	
	$('#unixTimeMillis').html(unixTimeNow);
	$('#jehvnarTimeNow').html(jehvnarTimeNow);
	$('#timeOffset').html(timeOffset);
	
	$('#numberOfMonths').html(monthsInAYear);
	$('#numberOfDays').html(daysInAYear / monthsInAYear);
}
setInterval(updateTime, 1); // Update the time

// Specify calendar system to use
$('#calendarSystem').change(function() {
    if ($(this).val() === '4-month') { // if 4 month system
        $('#optionalContent').show();
		monthsInAYear = 4; // Change the months of the year
		
    } else if ($(this).val() === '3-month') { // if 3 month system
		$('#optionalContent').show();
		monthsInAYear = 3; // Change the months of the year
		
	} else if ($(this).val() === 'monthless') { // if monthless system
		$('#optionalContent').hide();
	} 
});
</script>
</body>
</html>